[
    {
        "pattern": "arrayContains\\(",
        "message": "arrayContains() is Case Sensitive - try arrayContainsNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "arrayContains()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "arrayFindAll\\(",
        "message": "arrayFindAll() is Case Sensitive - try arrayFindAllNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "arrayFindAll()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "arrayFind\\(",
        "message": "arrayFind() is Case Sensitive - try arrayFindNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "arrayFind()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "compare\\(",
        "message": "compare() is Case Sensitive - try compareNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "compare()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "find\\(",
        "message": "find() is Case Sensitive - try findNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "find()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "listContains\\(",
        "message": "listContains() is Case Sensitive - try listContainsNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "listContains()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "listFind\\(",
        "message": "listFind() is Case Sensitive - try listFindNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "listFind()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "listValueCount\\(",
        "message": "listValueCount() is Case Sensitive - try listValueCountNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "listValueCount()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "REFind\\(",
        "message": "REFind() is Case Sensitive - try REFindNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "REFind()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "REMatch\\(",
        "message": "REMatch() is Case Sensitive - try REMatchNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "REMatch()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "replace\\(",
        "message": "replace() is Case Sensitive - try replaceNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "replace()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    },
    {
        "pattern": "REReplace\\(",
        "message": "REReplace() is Case Sensitive - try REReplaceNoCase() instead",
        "componentname": "CodeChecker",
        "category": "Case Sensitive Functions - Best Practices",
        "name": "REReplace()",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode", 
        "excludePaths": []
    }
    
]